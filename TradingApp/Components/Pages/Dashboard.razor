@page "/dashboard"
@rendermode InteractiveServer

<PageTitle>Dashboard - TradingApp</PageTitle>

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="user-info">
            <h1>Welcome back, @AuthService.CurrentUser?.FirstName!</h1>
            <p>Dashboard Overview</p>
        </div>
        <div class="user-actions">
            <button class="btn btn-outline-danger" @onclick="Logout">
                <i class="bi bi-box-arrow-right"></i>
                Logout
            </button>
        </div>
    </div>

    @if (AuthService.IsAuthenticated && AuthService.CurrentUser != null) {
        <div class="dashboard-content">
            <div class="user-profile-card">
                <h3><i class="bi bi-person-circle"></i> Profile Information</h3>
                <div class="profile-details">
                    <div class="detail-item">
                        <label>Username:</label>
                        <span>@AuthService.CurrentUser.Username</span>
                    </div>
                    <div class="detail-item">
                        <label>Email:</label>
                        <span>@AuthService.CurrentUser.Email</span>
                    </div>
                    <div class="detail-item">
                        <label>Full Name:</label>
                        <span>@AuthService.CurrentUser.FirstName @AuthService.CurrentUser.LastName</span>
                    </div>
                    <div class="detail-item">
                        <label>Starting Balance:</label>
                        <span>$@AuthService.CurrentUser.StartingCashBalance.ToString("N2")</span>
                    </div>
                    <div class="detail-item">
                        <label>Current Balance:</label>
                        <span class="balance">$@AuthService.CurrentUser.CurrentCashBalance.ToString("N2")</span>
                    </div>
                </div>
            </div>

            <div class="quick-actions">
                <h3><i class="bi bi-lightning"></i> Quick Actions</h3>
                <div class="action-buttons">
                    <a href="/stocks" class="action-btn">
                        <i class="bi bi-graph-up"></i>
                        Browse Stocks
                    </a>
                    <a href="/leaderboard" class="action-btn">
                        <i class="bi bi-trophy"></i>
                        Leaderboard
                    </a>
                    <a href="/portfolio" class="action-btn">
                        <i class="bi bi-briefcase"></i>
                        View Portfolio
                    </a>
                    <a href="/trades" class="action-btn">
                        <i class="bi bi-arrow-left-right"></i>
                        Trade History
                    </a>
                </div>
            </div>
        </div>
    } else {
        <div class="not-authenticated">
            <div class="alert alert-warning">
                <i class="bi bi-exclamation-triangle"></i>
                <h4>Not Authenticated</h4>
                <p>You need to be logged in to view the dashboard.</p>
                <a href="/login" class="btn btn-primary">Login</a>
            </div>
        </div>
    }
</div>

<style>
.dashboard-container {
    padding: 2rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #e2e8f0;
}

.user-info h1 {
    color: #2d3748;
    margin: 0;
    font-size: 2rem;
}

.user-info p {
    color: #718096;
    margin: 0.5rem 0 0 0;
}

.user-actions .btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.dashboard-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
}

.user-profile-card,
.quick-actions {
    background: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.user-profile-card h3,
.quick-actions h3 {
    color: #2d3748;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.profile-details {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid #f7fafc;
}

.detail-item:last-child {
    border-bottom: none;
}

.detail-item label {
    font-weight: 600;
    color: #4a5568;
}

.detail-item span {
    color: #2d3748;
}

.detail-item .balance {
    font-weight: 700;
    color: #38a169;
    font-size: 1.1rem;
}

.action-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.action-btn {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: #f7fafc;
    border-radius: 0.5rem;
    text-decoration: none;
    color: #2d3748;
    transition: all 0.2s;
    border: 2px solid transparent;
}

.action-btn:hover {
    background: #edf2f7;
    border-color: #667eea;
    transform: translateY(-2px);
    text-decoration: none;
    color: #2d3748;
}

.action-btn i {
    font-size: 1.2rem;
    color: #667eea;
}

.not-authenticated {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
}

.alert {
    padding: 2rem;
    border-radius: 1rem;
    text-align: center;
    max-width: 400px;
}

.alert-warning {
    background: #fef5e7;
    border: 1px solid #f6e05e;
    color: #744210;
}

.alert h4 {
    margin: 1rem 0 0.5rem 0;
}

.alert p {
    margin-bottom: 1.5rem;
}

@@media (max-width: 768px) {
    .dashboard-header {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
    }
    
    .dashboard-content {
        grid-template-columns: 1fr;
    }
}
</style>

@code {
    [Inject] private TradingApp.Data.Interfaces.IAuthenticationService AuthService { get; set; } = default!;
    [Inject] private NavigationManager Nav { get; set; } = default!;

    private async Task Logout() {
        await AuthService.LogoutAsync();
        Nav.NavigateTo("/");
    }
}
