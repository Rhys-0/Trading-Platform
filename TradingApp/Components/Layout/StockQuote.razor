@using Microsoft.JSInterop
@namespace TradingApp.Components
@inject IJSRuntime JS

<div class="tradingview-widget-container stock-container"
     style="width:100%; max-width:@($"{Width}px"); height:@($"{Height}px")">
  <div id="@_containerId" class="tradingview-widget-container__widget"
       style="width:100%; height:100%"></div>
  <div class="tradingview-widget-copyright">
    <a href="https://www.tradingview.com/symbols/@(Symbol?.Replace(":", "-"))/" rel="noopener nofollow" target="_blank">
      <span class="blue-text">@($"{Symbol} quotes by TradingView")</span>
    </a>
  </div>
</div>

@code {
  [Parameter] public string Symbol { get; set; } = "NASDAQ:TSLA";
  [Parameter] public int Width  { get; set; } = 1200;
  [Parameter] public int Height { get; set; } = 600;
  [Parameter] public string ColorTheme { get; set; } = "light";

  private string _containerId = $"tv_{Guid.NewGuid():N}";
  private bool _initialized;
  private IJSObjectReference? _loader;

  private static readonly string[] _defaultPeers = new[]
    { "NASDAQ:AAPL", "NASDAQ:GOOGL", "NASDAQ:MSFT" };

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (!firstRender) return;
    _initialized = true;

    _loader = await JS.InvokeAsync<IJSObjectReference>("import", "/js/tvLoader.js?v=2");
    var ok = await _loader.InvokeAsync<bool>("ensureTvLoaded", 25);
    if (!ok) return;

    await Render();
  }

  protected override async Task OnParametersSetAsync() {
    if (_initialized && _loader is not null)
      await Render();
  }

  private string[] BuildOverviewSymbols() {
    var list = new List<string>();
    if (!string.IsNullOrWhiteSpace(Symbol)) list.Add(Symbol);
    foreach (var p in _defaultPeers)
      if (!string.Equals(p, Symbol, StringComparison.OrdinalIgnoreCase)) list.Add(p);
    return list.ToArray();
  }

  private ValueTask Render() {
    var symbols = BuildOverviewSymbols();
    return _loader!.InvokeVoidAsync("renderOverview", _containerId, symbols, new {
      colorTheme = ColorTheme,
      isTransparent = false,
      locale = "en"
    });
  }
}
